<!DOCTYPE html>
<html>
	<head runat="server">
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />
		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="mobile-web-app-capable" content="yes" />
		<title>Р7 Офис</title>
		<link rel="icon" href="images/<%- editor.documentType %>.ico" type="image/x-icon" />
		<link rel="stylesheet" type="text/css" href="stylesheets/editor.css" />
	</head>
	<body>
		<div class="form">
			<div id="iframeEditor"></div>
		</div>
		<script src="<%= apiUrl %>"></script>
		<script>

			var docEditor;

			var innerAlert = function (message) {
				if (console && console.log)
					console.log(message);
			};

			var onAppReady = function () {
				innerAlert("Document editor ready");
			};

			var onDocumentStateChange = function (event) {
				var title = document.title.replace(/\*$/g, "");
				document.title = title + (event.data ? "*" : "");
			};

			var onRequestEditRights = function () {
				location.href = location.href.replace(RegExp("mode=view\&?", "i"), "");
			};

			var onRequestHistory = function (event) {
				var historyObj = <%- JSON.stringify(history) %> || null;

				docEditor.refreshHistory(
					{
						currentVersion: "<%- file.version %>",
						history: historyObj
					});
			};

			var onRequestHistoryData = function (data) {
				var version = data.data;
				var historyData = <%- JSON.stringify(historyData) %> || null;

				docEditor.setHistoryData(historyData[version-1]);
			};

			var onRequestHistoryClose = function (event){
				document.location.reload();
			};

			var onError = function (event) {
				if (event)
					innerAlert(event.data);
			};

			var onOutdatedVersion = function (event) {
				location.reload(true);
			};

			var connectEditor = function () {

				docEditor = new DocsAPI.DocEditor("iframeEditor", <%- include('config') %>,
						events: {
							"onAppReady": onAppReady,
							"onDocumentStateChange": onDocumentStateChange,
							'onRequestEditRights': onRequestEditRights,
							"onError": onError,
							"onRequestHistory":  onRequestHistory,
							"onRequestHistoryData": onRequestHistoryData,
							"onRequestHistoryClose": onRequestHistoryClose,
							"onOutdatedVersion": onOutdatedVersion,
						}
				});

				fixSize();
			};

			var fixSize = function () {
				var wrapEl = document.getElementsByClassName("form");
				if (wrapEl.length) {
					wrapEl[0].style.height = screen.availHeight + "px";
					window.scrollTo(0, -1);
					wrapEl[0].style.height = window.innerHeight + "px";
				}
			};

			if (window.addEventListener) {
				window.addEventListener("load", connectEditor);
				window.addEventListener("resize", fixSize);
			} else if (window.attachEvent) {
				window.attachEvent("onload", connectEditor);
				window.attachEvent("onresize", fixSize);
			}
		</script>
	</body>
</html>
